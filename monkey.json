--------------------------------------------------
    var projectorContents: UIViewController?
--------------------------------------------------
(in putStuffOnProjector)
        if projectorContents == nil {
            // Generic "get a VC from the storyboard
            guard let storyboard = self.storyboard else { return }
            guard let projectorContents = storyboard.instantiateViewController(withIdentifier: ProjectorContentsViewController.storyboardName) as? ProjectorContentsViewController else { return }
            // actual interesting stuff
            addVCToProjector(projectorContents)
        } else {
            removeVCFromProjector(projectorContents!)
        }
--------------------------------------------------
    func addVCToProjector(_ projectorContents: UIViewController) {
    }

    func removeVCFromProjector(_ projectorContents: UIViewController) {
    }
--------------------------------------------------
    func hasSecondScreen() -> Bool {
        return UIScreen.screens.count > 1 
    }
--------------------------------------------------

    func addVCToProjector(_ projectorContents: UIViewController) { // existing
        guard hasSecondScreen() else { return }
        guard let screen = UIScreen.screens.last else { return }
--------------------------------------------------
        self.projectorContents = projectorContents

        guard let view = projectorContents.view else { return } // forces view load
        view.translatesAutoresizingMaskIntoConstraints = false
--------------------------------------------------
    var window: UIWindow?

    // in addVCToProjector
        window = UIWindow()
        window?.screen = screen
        window?.addSubview(view)

        window?.isHidden = false
--------------------------------------------------
GIVE IT A RUN.  Tour the Simulator. Layout sucks (hopefully)

        let leftConstraint = view.leftAnchor.constraint(equalTo: window!.leftAnchor)
        let topConstraint = view.topAnchor.constraint(equalTo: window!.topAnchor)
        let bottomConstraint = view.bottomAnchor.constraint(equalTo: window!.bottomAnchor)
        let rightConstraint = view.rightAnchor.constraint(equalTo: window!.rightAnchor)
        
        NSLayoutConstraint.activate([leftConstraint, topConstraint, 
                                     bottomConstraint, rightConstraint])
--------------------------------------------------
Yay!  It works!  Toggle.

    func removeVCFromProjector(_ projectorContents: UIViewController) { // existing
        self.projectorContents?.view.removeFromSuperview()
        window = nil
        self.projectorContents = nil
    }

--------------------------------------------------
 Make it betterer

    override func viewDidLoad() { // existing
        super.viewDidLoad() // existing
        addProjectorNotifications()
    }
    func addProjectorNotifications() {
        let center = NotificationCenter.default
        
        center.addObserver(self, selector: #selector(handleScreenComingAndGoing),
                           name: UIScreen.didConnectNotification,
                           object: nil)
        center.addObserver(self, selector: #selector(handleScreenComingAndGoing),
                           name: UIScreen.didDisconnectNotification,
                           object: nil)
    }

    @objc func handleScreenComingAndGoing() {
        putStuffOnPr√∂jector()
    }

breakpoints in putStuffOnProjector
--------------------------------------------------


    func removeProjectorNotifications() {
        let center = NotificationCenter.default
        center.removeObserver(self,
                              name: UIScreen.didConnectNotification, object: nil)
        center.removeObserver(self,
                              name: UIScreen.didDisconnectNotification, object: nil)
    }

    deinit {
        removeProjectorNotifications()
    }
--------------------------------------------------


[
    {
        "name": "Blarg",
        "isEnabled": true,
        "body": "
    },
    {
        "name": "Blarg 2",
        "isEnabled": true,
        "body": "Snorg \"waffle\"
    }
]
